name: "Staging Build"
on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging ]
  workflow_dispatch:

jobs:

  Build:

    runs-on: ubuntu-latest
    environment:
      name: Test
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run the flake8 linter
      run: flake8

    - name: Run the pylint linter
      run: pylint --rcfile=.pylintrc api/

    - name: Create the Test Environment variables
      run: |
        touch .env
        echo FLASK_APP=${{secrets.FLASK_APP}} >> .env
        echo FLASK_ENV=${{secrets.FLASK_ENV}} >> .env

    - name: Test with pytest
      run: |
        if [ -d tests ] || [ -d test ]; then python -m pytest; fi

    - name: Pytest Coverage
      run: |
        if [ -d tests ] || [ -d test ]; then coverage run -m pytest; fi
        if [ -d tests ] || [ -d test ]; then coverage report -m; fi

    - name: Coverage Report
      run: coverage xml

  Test-Local:
    runs-on: ubuntu-latest
    environment:
      name: Development
    needs: [Build]
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Create the Staging Environment variables
      run: |
        touch .env
        echo FLASK_APP=${{secrets.FLASK_APP}} >> .env
        echo FLASK_ENV=${{secrets.FLASK_ENV}} >> .env

    - name: Test application
      run: |
        python manage.py run &
        sleep 10
        curl http://127.0.0.1:5000/
